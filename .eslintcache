[{"/Users/colin/trial2/src/index.js":"1","/Users/colin/trial2/src/App.js":"2","/Users/colin/trial2/src/reportWebVitals.js":"3","/Users/colin/trial2/src/components/Web3Info.js":"4","/Users/colin/Desktop/EthProject/src/index.js":"5","/Users/colin/Desktop/EthProject/src/App1.js":"6","/Users/colin/Desktop/EthProject/src/Client(React)/components/Main.js":"7","/Users/colin/Desktop/EthProject/src/Client(React)/components/Overview.js":"8","/Users/colin/Desktop/EthProject/src/Client(React)/components/Navbar.js":"9","/Users/colin/Desktop/EthProject/src/Client(React)/components/Account/Account.js":"10","/Users/colin/Desktop/EthProject/src/Client(React)/components/Header.js":"11","/Users/colin/Desktop/EthProject/src/Client(React)/components/TrialDesign/TrialDesign.js":"12"},{"size":500,"mtime":1607732159433,"results":"13","hashOfConfig":"14"},{"size":480,"mtime":1607742591273,"results":"15","hashOfConfig":"14"},{"size":362,"mtime":1607732159434,"results":"16","hashOfConfig":"14"},{"size":1406,"mtime":1607742419525,"results":"17","hashOfConfig":"14"},{"size":276,"mtime":1608029746000,"results":"18","hashOfConfig":"19"},{"size":550,"mtime":1608804378321,"results":"20","hashOfConfig":"19"},{"size":441,"mtime":1608804641119,"results":"21","hashOfConfig":"19"},{"size":150,"mtime":1608714641114,"results":"22","hashOfConfig":"19"},{"size":480,"mtime":1608804385366,"results":"23","hashOfConfig":"19"},{"size":2810,"mtime":1608789753316,"results":"24","hashOfConfig":"19"},{"size":707,"mtime":1608801737581,"results":"25","hashOfConfig":"19"},{"size":2315,"mtime":1608781501445,"results":"26","hashOfConfig":"19"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},"15oza1g",{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"39"},"xj0st0",{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"39"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"39"},"/Users/colin/trial2/src/index.js",[],["56","57"],"/Users/colin/trial2/src/App.js",[],"/Users/colin/trial2/src/reportWebVitals.js",[],"/Users/colin/trial2/src/components/Web3Info.js",["58"],"/Users/colin/Desktop/EthProject/src/index.js",["59"],"import React, { Component } from 'react';\nimport { render } from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport App3 from './App1.js';\nimport './style.css';\n\nrender(\n  (<BrowserRouter>\n    <App3 />\n  </BrowserRouter>), document.getElementById('root'));",["60","61"],"/Users/colin/Desktop/EthProject/src/App1.js",[],"/Users/colin/Desktop/EthProject/src/Client(React)/components/Main.js",[],"/Users/colin/Desktop/EthProject/src/Client(React)/components/Overview.js",[],"/Users/colin/Desktop/EthProject/src/Client(React)/components/Navbar.js",[],"/Users/colin/Desktop/EthProject/src/Client(React)/components/Account/Account.js",["62"],"import React, { useState, useEffect, useCallback } from 'react';\nimport { useWeb3 } from '@openzeppelin/network/react';\nimport Avatar from '@material-ui/core/Avatar';\nimport gambler from './images/gambler.jpg';\nimport { makeStyles } from '@material-ui/core/styles';\nimport './App.css';\nimport dice from './images/dice.gif';\nimport money from './images/money.gif';\n\n\nconst infuraProjectId = '95202223388e49f48b423ea50a70e336';\n\nconst useStyles = makeStyles((theme) => ({\n\n  large: {\n    width: theme.spacing(18),\n    height: theme.spacing(18),\n    \n  },\n}));\n\nconst Account = () => {\n  const web3Context = useWeb3(`wss://mainnet.infura.io/ws/v3/${infuraProjectId}`);\n  const { networkId, accounts, providerName, lib } = web3Context;\n  const requestAuth = async web3Context => {\n    try {\n      await web3Context.requestAuth();\n    } catch (e) {\n      console.error(e);\n    }\n  };\n\n  const [balance, setBalance] = useState(0);\n\n  const getBalance = useCallback(async () => {\n    let balance =\n      accounts && accounts.length > 0 ? lib.utils.fromWei(await lib.eth.getBalance(accounts[0]), 'ether') : 'Unknown';\n    setBalance(balance);\n  }, [accounts, lib.eth, lib.utils]);\n\n  useEffect(() => {\n    getBalance();\n  }, [accounts, getBalance, networkId]);\n\n  const classes = useStyles();\n\n\n   \n    return  <div className=\"App\">\n   <header className=\"App-header\">\n      <box className = \"row\"> \n      <img alt=\"dice\" className=\"dice\" src={money} />\n      <img alt=\"dice\" className=\"dice\" src={dice} />\n      <img alt=\"dice\" className=\"dice\" src={money} />\n      </box>\n   \n     \n      <p1>\n\n       Your Account\n      </p1> \n      \n      \n      </header>\n      <div  className=\"spacecontainer\"> </div>\n    \n    \n    {accounts && accounts.length ? (\n        <div  className=\"overall\">\n       <div  className=\"containerprofile\">\n       \n       <div  className=\"spacecontainer\"> </div>\n\n<Avatar alt=\"containerprofile-dice\" className={classes.large} src={gambler}  />\n  \n  <div  className=\"spacecontainer\"> </div>\n      \n  <div  className=\"infocontainer\"> \n     \n      <b>The Wallet Address used is</b> <br></br><br></br>\n      \n      { accounts[0] }\n     \n      <br></br>  \n\n      <div  className=\"sidenote\"> \n     \n     <i> **You will be unknown to others.  </i>\n      </div>\n      \n      <br></br>\n      <br></br>\n     <b>Balance (Eth) :</b> {balance} \n     \n     </div>\n     </div>\n     <br></br>\n\n     <div  className=\"gamecontainer\"> \nNumber of Games played: \n     </div>\n     <div  className=\"gamecontainer\"> \nNumber of Games played: \n     </div>\n        </div>\n        \n      ) : !!networkId && providerName !== 'infura' ? ( \n       \n       <div>\n      Cant see any account details? Login to metamask!\n\n\n\n        </div>\n      ) : (\n        <div>   fekf</div>\n      )}\n</div>\n\n\n\n\n  \n  }\n\nexport default Account; ","/Users/colin/Desktop/EthProject/src/Client(React)/components/Header.js",[],"/Users/colin/Desktop/EthProject/src/Client(React)/components/TrialDesign/TrialDesign.js",["63","64","65","66","67","68"],"import React, { useState, useEffect, useCallback } from 'react';\n\nimport {Route, withRouuter} from 'react-router-dom';\nimport { useWeb3 } from '@openzeppelin/network/react';\n\nimport './App.css';\nimport dice from './images/dice.gif';\nimport money from './images/money.gif';\n\nconst infuraProjectId = '95202223388e49f48b423ea50a70e336';\n\n\nconst TrialDesign = () => {\n  const web3Context = useWeb3(`wss://mainnet.infura.io/ws/v3/${infuraProjectId}`);\n  const { networkId, networkName, accounts, providerName, lib } = web3Context;\n  const requestAuth = async web3Context => {\n    try {\n      await web3Context.requestAuth();\n    } catch (e) {\n      console.error(e);\n    }\n  };\n\n  const requestAccess = useCallback(() => requestAuth(web3Context), []);\n  \n  const [balance, setBalance] = useState(0);\n\n  const getBalance = useCallback(async () => {\n    let balance =\n      accounts && accounts.length > 0 ? lib.utils.fromWei(await lib.eth.getBalance(accounts[0]), 'ether') : 'Unknown';\n    setBalance(balance);\n  }, [accounts, lib.eth, lib.utils]);\n\n  useEffect(() => {\n    getBalance();\n  }, [accounts, getBalance, networkId]);\n\n\n  const message = () => {\n    alert(\"Go to www.metamask.com\") \n   }\n\n   \n    return  <div className=\"App\">\n    <header className=\"App-header\">\n      <box className = \"row\"> \n      <img alt=\"dice\" className=\"dice\" src={money} />\n      <img alt=\"dice\" className=\"dice\" src={dice} />\n     \n      <img alt=\"dice\" className=\"dice\" src={money} />\n      </box>\n   \n     \n      <p1>\n\n       Welcome to Casino Royale\n      </p1> \n      \n      <a\n        className=\"App-link\"\n        href=\"https://reactjs.org\"\n       \n      >\n          Metamask\n        </a>\n        \n        \n      </header>\n\n      <div  className=\"spacecontainer\"> </div>\n    \n     \n      <div  className=\"containerprofile\">\n\n{/* insert image of profile account */}\n\n      \n    {accounts && accounts.length ? (\n        <div>\n\n\n  \n       <div>Your address: {accounts && accounts.length ? accounts[0] : 'Unknown'}</div>\n      <div>Your ETH balance: {balance}</div>\n     \n\n        </div>\n      ) : !!networkId && providerName !== 'infura' ? ( \n       \n       <div>\n      Cant see any account details? Login to metamask!\n\n\n\n        </div>\n      ) : (\n        <div></div>\n      )}\n</div>\n\n\n  </div>\n\n  \n  }\n\nexport default TrialDesign; ",{"ruleId":"69","replacedBy":"70"},{"ruleId":"71","replacedBy":"72"},{"ruleId":"73","severity":1,"message":"74","line":27,"column":69,"nodeType":"75","endLine":27,"endColumn":71,"suggestions":"76"},{"ruleId":"77","severity":1,"message":"78","line":1,"column":17,"nodeType":"79","messageId":"80","endLine":1,"endColumn":26},{"ruleId":"69","replacedBy":"81"},{"ruleId":"71","replacedBy":"82"},{"ruleId":"77","severity":1,"message":"83","line":25,"column":9,"nodeType":"79","messageId":"80","endLine":25,"endColumn":20},{"ruleId":"77","severity":1,"message":"84","line":3,"column":9,"nodeType":"79","messageId":"80","endLine":3,"endColumn":14},{"ruleId":"77","severity":1,"message":"85","line":3,"column":16,"nodeType":"79","messageId":"80","endLine":3,"endColumn":27},{"ruleId":"77","severity":1,"message":"86","line":15,"column":22,"nodeType":"79","messageId":"80","endLine":15,"endColumn":33},{"ruleId":"77","severity":1,"message":"87","line":24,"column":9,"nodeType":"79","messageId":"80","endLine":24,"endColumn":22},{"ruleId":"73","severity":1,"message":"74","line":24,"column":69,"nodeType":"75","endLine":24,"endColumn":71,"suggestions":"88"},{"ruleId":"77","severity":1,"message":"89","line":39,"column":9,"nodeType":"79","messageId":"80","endLine":39,"endColumn":16},"no-native-reassign",["90"],"no-negated-in-lhs",["91"],"react-hooks/exhaustive-deps","React Hook useCallback has a missing dependency: 'web3Context'. Either include it or remove the dependency array.","ArrayExpression",["92"],"no-unused-vars","'Component' is defined but never used.","Identifier","unusedVar",["90"],["91"],"'requestAuth' is assigned a value but never used.","'Route' is defined but never used.","'withRouuter' is defined but never used.","'networkName' is assigned a value but never used.","'requestAccess' is assigned a value but never used.",["93"],"'message' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"94","fix":"95"},{"desc":"94","fix":"96"},"Update the dependencies array to be: [web3Context]",{"range":"97","text":"98"},{"range":"99","text":"98"},[811,813],"[web3Context]",[742,744]]