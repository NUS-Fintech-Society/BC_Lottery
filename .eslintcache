[{"/Users/meganyee/Documents/GitHub/Blockchain_Lottery/src/index.js":"1","/Users/meganyee/Documents/GitHub/Blockchain_Lottery/src/App1.js":"2","/Users/meganyee/Documents/GitHub/Blockchain_Lottery/src/Client(React)/components/Main.js":"3","/Users/meganyee/Documents/GitHub/Blockchain_Lottery/src/Client(React)/components/Navbar/Navbar.js":"4","/Users/meganyee/Documents/GitHub/Blockchain_Lottery/src/Client(React)/components/Overview/Overview.js":"5","/Users/meganyee/Documents/GitHub/Blockchain_Lottery/src/Client(React)/components/Navbar/Button.js":"6","/Users/meganyee/Documents/GitHub/Blockchain_Lottery/src/Client(React)/components/Navbar/MenuItems.js":"7","/Users/meganyee/Documents/GitHub/Blockchain_Lottery/src/Client(React)/components/Account/Account.js":"8","/Users/meganyee/Documents/GitHub/Blockchain_Lottery/src/Client(React)/components/TrialDesign/TrialDesign.js":"9","/Users/meganyee/Documents/GitHub/Blockchain_Lottery/src/Client(React)/components/Gameplay/Gameplay.js":"10","/Users/meganyee/Documents/GitHub/Blockchain_Lottery/src/Client(React)/components/Gameplay/lottery.js":"11","/Users/meganyee/Documents/GitHub/Blockchain_Lottery/src/Client(React)/components/Gameplay/web3.js":"12"},{"size":276,"mtime":1608804681000,"results":"13","hashOfConfig":"14"},{"size":557,"mtime":1609690957552,"results":"15","hashOfConfig":"14"},{"size":548,"mtime":1610202579541,"results":"16","hashOfConfig":"14"},{"size":1162,"mtime":1609694794191,"results":"17","hashOfConfig":"14"},{"size":4627,"mtime":1610204289386,"results":"18","hashOfConfig":"14"},{"size":597,"mtime":1609694785977,"results":"19","hashOfConfig":"14"},{"size":376,"mtime":1610202088120,"results":"20","hashOfConfig":"14"},{"size":2810,"mtime":1608804681000,"results":"21","hashOfConfig":"14"},{"size":2315,"mtime":1608804681000,"results":"22","hashOfConfig":"14"},{"size":9087,"mtime":1610200649092,"results":"23","hashOfConfig":"14"},{"size":1160,"mtime":1610199902001,"results":"24","hashOfConfig":"14"},{"size":100,"mtime":1609827512121,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"29"},"gp06xv",{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":"36","usedDeprecatedRules":"29"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"29"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"29"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"29"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},"/Users/meganyee/Documents/GitHub/Blockchain_Lottery/src/index.js",["56"],"import React, { Component } from 'react';\nimport { render } from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport App3 from './App1.js';\nimport './style.css';\n\nrender(\n  (<BrowserRouter>\n    <App3 />\n  </BrowserRouter>), document.getElementById('root'));",["57","58"],"/Users/meganyee/Documents/GitHub/Blockchain_Lottery/src/App1.js",[],"/Users/meganyee/Documents/GitHub/Blockchain_Lottery/src/Client(React)/components/Main.js",[],"/Users/meganyee/Documents/GitHub/Blockchain_Lottery/src/Client(React)/components/Navbar/Navbar.js",["59","60"],"  import React, {Component} from 'react';\n  import { MenuItems } from \"./MenuItems\";\n  import { Link } from 'react-router-dom';\n  import './Navbar.css';\n  import {Button} from \"./Button\";\n\n  class Navbar extends Component {\n    \n    state = {clicked: false}\n\n    handleClick = () => {\n      this.setState({clicked: !this.state.clicked})\n    }\n\n    render() {\n      return (\n          <nav className=\"NavbarItems\">\n            <h1 className=\"navbar-logo\">Blo-ttery<i className=\"fas fa-dice\"></i></h1>\n            <div className=\"menu-icon\" onClick={this.handleClick}>\n              <i className={this.state.clicked ? 'fas fa-times' : 'fas fa-bars'}></i>\n            </div>\n            <ul className={this.state.clicked ? 'nav-menu active' : 'nav-menu'}>\n              {MenuItems.map((item, index) => {\n                return (\n                  <li key={index}>\n                    <a className={item .cName} href={item.url}>\n                      {item.title}\n\n                    </a>\n                  </li>\n                )\n              })}\n            </ul>\n            <Button>Log In</Button>\n\n          </nav>\n      );\n    }\n  }\n\n  export default Navbar;","/Users/meganyee/Documents/GitHub/Blockchain_Lottery/src/Client(React)/components/Overview/Overview.js",[],"/Users/meganyee/Documents/GitHub/Blockchain_Lottery/src/Client(React)/components/Navbar/Button.js",[],"/Users/meganyee/Documents/GitHub/Blockchain_Lottery/src/Client(React)/components/Navbar/MenuItems.js",[],"/Users/meganyee/Documents/GitHub/Blockchain_Lottery/src/Client(React)/components/Account/Account.js",["61"],"import React, { useState, useEffect, useCallback } from 'react';\nimport { useWeb3 } from '@openzeppelin/network/react';\nimport Avatar from '@material-ui/core/Avatar';\nimport gambler from './images/gambler.jpg';\nimport { makeStyles } from '@material-ui/core/styles';\nimport './App.css';\nimport dice from './images/dice.gif';\nimport money from './images/money.gif';\n\n\nconst infuraProjectId = '95202223388e49f48b423ea50a70e336';\n\nconst useStyles = makeStyles((theme) => ({\n\n  large: {\n    width: theme.spacing(18),\n    height: theme.spacing(18),\n    \n  },\n}));\n\nconst Account = () => {\n  const web3Context = useWeb3(`wss://mainnet.infura.io/ws/v3/${infuraProjectId}`);\n  const { networkId, accounts, providerName, lib } = web3Context;\n  const requestAuth = async web3Context => {\n    try {\n      await web3Context.requestAuth();\n    } catch (e) {\n      console.error(e);\n    }\n  };\n\n  const [balance, setBalance] = useState(0);\n\n  const getBalance = useCallback(async () => {\n    let balance =\n      accounts && accounts.length > 0 ? lib.utils.fromWei(await lib.eth.getBalance(accounts[0]), 'ether') : 'Unknown';\n    setBalance(balance);\n  }, [accounts, lib.eth, lib.utils]);\n\n  useEffect(() => {\n    getBalance();\n  }, [accounts, getBalance, networkId]);\n\n  const classes = useStyles();\n\n\n   \n    return  <div className=\"App\">\n   <header className=\"App-header\">\n      <box className = \"row\"> \n      <img alt=\"dice\" className=\"dice\" src={money} />\n      <img alt=\"dice\" className=\"dice\" src={dice} />\n      <img alt=\"dice\" className=\"dice\" src={money} />\n      </box>\n   \n     \n      <p1>\n\n       Your Account\n      </p1> \n      \n      \n      </header>\n      <div  className=\"spacecontainer\"> </div>\n    \n    \n    {accounts && accounts.length ? (\n        <div  className=\"overall\">\n       <div  className=\"containerprofile\">\n       \n       <div  className=\"spacecontainer\"> </div>\n\n<Avatar alt=\"containerprofile-dice\" className={classes.large} src={gambler}  />\n  \n  <div  className=\"spacecontainer\"> </div>\n      \n  <div  className=\"infocontainer\"> \n     \n      <b>The Wallet Address used is</b> <br></br><br></br>\n      \n      { accounts[0] }\n     \n      <br></br>  \n\n      <div  className=\"sidenote\"> \n     \n     <i> **You will be unknown to others.  </i>\n      </div>\n      \n      <br></br>\n      <br></br>\n     <b>Balance (Eth) :</b> {balance} \n     \n     </div>\n     </div>\n     <br></br>\n\n     <div  className=\"gamecontainer\"> \nNumber of Games played: \n     </div>\n     <div  className=\"gamecontainer\"> \nNumber of Games played: \n     </div>\n        </div>\n        \n      ) : !!networkId && providerName !== 'infura' ? ( \n       \n       <div>\n      Cant see any account details? Login to metamask!\n\n\n\n        </div>\n      ) : (\n        <div>   fekf</div>\n      )}\n</div>\n\n\n\n\n  \n  }\n\nexport default Account; ","/Users/meganyee/Documents/GitHub/Blockchain_Lottery/src/Client(React)/components/TrialDesign/TrialDesign.js",["62","63","64","65","66","67"],"import React, { useState, useEffect, useCallback } from 'react';\n\nimport {Route, withRouuter} from 'react-router-dom';\nimport { useWeb3 } from '@openzeppelin/network/react';\n\nimport './App.css';\nimport dice from './images/dice.gif';\nimport money from './images/money.gif';\n\nconst infuraProjectId = '95202223388e49f48b423ea50a70e336';\n\n\nconst TrialDesign = () => {\n  const web3Context = useWeb3(`wss://mainnet.infura.io/ws/v3/${infuraProjectId}`);\n  const { networkId, networkName, accounts, providerName, lib } = web3Context;\n  const requestAuth = async web3Context => {\n    try {\n      await web3Context.requestAuth();\n    } catch (e) {\n      console.error(e);\n    }\n  };\n\n  const requestAccess = useCallback(() => requestAuth(web3Context), []);\n  \n  const [balance, setBalance] = useState(0);\n\n  const getBalance = useCallback(async () => {\n    let balance =\n      accounts && accounts.length > 0 ? lib.utils.fromWei(await lib.eth.getBalance(accounts[0]), 'ether') : 'Unknown';\n    setBalance(balance);\n  }, [accounts, lib.eth, lib.utils]);\n\n  useEffect(() => {\n    getBalance();\n  }, [accounts, getBalance, networkId]);\n\n\n  const message = () => {\n    alert(\"Go to www.metamask.com\") \n   }\n\n   \n    return  <div className=\"App\">\n    <header className=\"App-header\">\n      <box className = \"row\"> \n      <img alt=\"dice\" className=\"dice\" src={money} />\n      <img alt=\"dice\" className=\"dice\" src={dice} />\n     \n      <img alt=\"dice\" className=\"dice\" src={money} />\n      </box>\n   \n     \n      <p1>\n\n       Welcome to Casino Royale\n      </p1> \n      \n      <a\n        className=\"App-link\"\n        href=\"https://reactjs.org\"\n       \n      >\n          Metamask\n        </a>\n        \n        \n      </header>\n\n      <div  className=\"spacecontainer\"> </div>\n    \n     \n      <div  className=\"containerprofile\">\n\n{/* insert image of profile account */}\n\n      \n    {accounts && accounts.length ? (\n        <div>\n\n\n  \n       <div>Your address: {accounts && accounts.length ? accounts[0] : 'Unknown'}</div>\n      <div>Your ETH balance: {balance}</div>\n     \n\n        </div>\n      ) : !!networkId && providerName !== 'infura' ? ( \n       \n       <div>\n      Cant see any account details? Login to metamask!\n\n\n\n        </div>\n      ) : (\n        <div></div>\n      )}\n</div>\n\n\n  </div>\n\n  \n  }\n\nexport default TrialDesign; ","/Users/meganyee/Documents/GitHub/Blockchain_Lottery/src/Client(React)/components/Gameplay/Gameplay.js",["68","69","70","71","72","73"],"import React, { Component } from 'react';\nimport {useState} from 'react'\nimport './Gameplay.css';\nimport web3 from './web3.js';\nimport lottery from './lottery.js';\nimport Button from '@material-ui/core/Button';\n\nclass Gameplay extends React.Component {\n  state = {\n    manager: '',\n    players: [],\n    balance: '',\n    value: '',\n    message: 'Welcome to Holly Rolly Polly!',\n    loading: false,\n    pageLoading: true,\n    standardBet: '',\n    account: '',\n    guess: 0\n  };\n  async componentDidMount() {\n   \n    const players = await lottery.methods.getPlayers().call();\n    const balance = await web3.eth.getBalance(lottery.options.address);\n    const accounts = await web3.eth.getAccounts();\n    this.setState({  players, balance });\n    this.setState({ account: accounts[0] })\n    web3.eth.subscribe('newBlockHeaders', function (err, result) {\n      if(err) {\n        console.log(err);\n      }\n    });\n\n    this.setState({pageLoading: false})\n  }\n\n  onSubmit = async event => {\n    event.preventDefault();\n\n    if (this.state.value < 1) {\n      this.setState({ message: 'You need a minimum of 1 ether to bet.' });\n      return;\n    }\n    const accounts = await web3.eth.getAccounts();\n\n    this.setState({ loading: true });\n    this.setState({\n      message: 'This may take up to a minute. Waiting on transaction success...'\n    });\n\n    await lottery.methods.enter().send({\n      from: accounts[0],\n      value: web3.utils.toWei(this.state.value, 'ether')\n    });\n\n    this.setState({ message: 'Entry Recorded!'});\n    this.setState({ value: '' });\n\n   \n    const players = await lottery.methods.getPlayers().call();\n    const balance = await web3.eth.getBalance(lottery.options.address);\n\n    this.setState({ players, balance });\n    this.setState({ loading: false });\n  };\n\n  onClick = async () => {\n    const accounts = await web3.eth.getAccounts();\n\n    this.setState({ loading: true });\n    this.setState({\n      message: 'Please wait...'\n    });\n\n    const convertedEthers = this.state.balance / 1000000000000000000;\n    await lottery.methods.pickWinner().send({\n      from: accounts[0]\n    });\n\n    this.setState({ message: 'Congrats User ' + accounts[0] + ' , you have won ' + convertedEthers + ' Ethers!'});\n\n   \n    const players = await lottery.methods.getPlayers().call();\n    const balance = await web3.eth.getBalance(lottery.options.address);\n\n    this.setState({  players, balance });\n    this.setState({ loading: false });\n    this.setState({ standardBet: \"\"});\n  };\n\n  render() {\n    const X1HomepageData = {\n      title: \"https://anima-uploads.s3.amazonaws.com/projects/5ff0a4b7fe424f757973934b/releases/5ff5cdb4c35e8b29a7cdaf05/img/title@1x.png\",\n      spanText: \"Room Details\",\n      spanText2: \" \",\n      playerspng: \"https://anima-uploads.s3.amazonaws.com/projects/5ff0a4b7fe424f757973934b/releases/5ff5cdb4c35e8b29a7cdaf05/img/playerspng@1x.png\",\n      numberOfPlayers: \"Number of Players: \",\n      potpng: \"https://anima-uploads.s3.amazonaws.com/projects/5ff0a4b7fe424f757973934b/releases/5ff5cdb4c35e8b29a7cdaf05/img/potpng@1x.png\",\n      currentPotsize: \"Current Potsize: \",\n      gameplay: \"GamePlay\",\n      text2: \"Please input number of tokens to bet: \",\n      gamePrompt: \"Game Prompt\",\n      text1: this.state.message\n    };\n\n  //Grammatical OCD \n  var _inputEth = \"\"\n  var _inputPlayer=\"\"\n  if(this.state.balance / 1000000000000000000 <= 1){\n    _inputEth=\"Ether\"\n  }\n  else{\n    _inputEth=\"Ethers\"\n  }\n\n  if(this.state.players.length <=1){\n    _inputPlayer=\"Player\"\n  }\n  else{\n    _inputPlayer=\"Players\"\n  }\n  if (this.state.pageLoading) {\n      return <h1>Now Connecting....</h1>\n  } else{\n      return (\n      <div className=\"x1homepage\">\n        <img className=\"title\" src={X1HomepageData.title} />\n        <h1 className=\"room-details valign-text-middle border-class-1 atomicage-normal-white-36px\">\n          <span>\n            <span className=\"span1\">{X1HomepageData.spanText}</span>\n          </span>\n        </h1>\n        <div className=\"auto-flex2\">\n          <img className=\"playerspng\" src={X1HomepageData.playerspng} />\n          <div className={`nrplayers-frame border-class-2 ${\"\"}`}>\n          <div className=\"address valign-text-middle border-class-1 armata-regular-normal-black-16px\">{this.state.players.length} {_inputPlayer}</div>\n        </div>\n          {/* <NrplayersFrame {...nrplayersFrameProps}>{nrplayersFrameData}</NrplayersFrame> */}\n        </div>\n        <div className=\"number-of-players valign-text-middle border-class-1 armata-regular-normal-black-16px\">\n          {X1HomepageData.numberOfPlayers}{this.state.players.length}\n        </div>\n        <div className=\"auto-flex1\">\n          <img className=\"potpng\" src={X1HomepageData.potpng} />\n          <div className={`nrplayers-frame border-class-2 ${\"\"}`}>\n          <div className=\"address valign-text-middle border-class-1 armata-regular-normal-black-16px\">{this.state.balance / 1000000000000000000} {_inputEth}</div>\n        </div>\n          {/* <NrplayersFrame {...nrplayersFrame2Props} className=\"pot-frame\"></NrplayersFrame> */}\n        </div>\n        <div className=\"current-potsize valign-text-middle border-class-1 armata-regular-normal-black-16px\">\n          {X1HomepageData.currentPotsize}{web3.utils.fromWei(this.state.balance, 'ether')} {_inputEth}\n        </div>\n        <div className=\"game-play valign-text-middle border-class-1 atomicage-regular-normal-absolute-zero-36px\">\n          {X1HomepageData.gameplay}\n        </div>\n        <div className={`overlap-group ${\"\"}`}>\n          <div className=\"text-2 border-class-1 armata-regular-normal-white-20px\">{X1HomepageData.text2}\n            <input\n              type=\"number\"\n              value={this.state.value}\n              onChange={event => this.setState({ value: event.target.value })}\n            />\n          </div>\n          {/* <Overlapgroup3 {...overlapgroup3Props}></Overlapgroup3> */}\n          <div className={`partButton ${\"\"}`}>\n          <Button variant=\"contained\" disabled={this.state.value<1} size=\"Large\" className=\"participate border-class-1 lato-regular-normal-black-16px\" onClick = {this.onSubmit}>Participate</Button>\n        </div>\n        </div>\n        <div className=\"game-prompt valign-text-middle border-class-1 atomicage-regular-normal-governor-bay-36px\">\n          {X1HomepageData.gamePrompt}\n        </div>\n        <div className=\"overlap-group1\">\n          <div className=\"armata-regular-normal-white-20px\">{this.state.message}</div>\n          {/* <div className=\"text-2 border-class-1 armata-regular-normal-black-20px\">{this.state.message}</div> */}\n          {/* <Overlapgroup3 {...overlapgroup32Props} className=\"overlap-group2\" /> */}\n        <div className={`backButton ${\"\"}`}>\n          <Button variant=\"contained\" size=\"Large\" color=\"secondary\" className=\"lato-regular-normal-black-16px\">Back</Button>\n        </div>\n        <div className={`pickWinnerButton ${\"\"}`}>\n          <Button variant=\"contained\" disabled={this.state.players.length==0} size=\"Large\" color=\"primary\" className=\"lato-regular-normal-black-16px\" onClick={this.onClick}>Pick Winner!</Button>\n        </div>\n        </div>\n        <Wave/>\n        </div>\n      );\n    }\n  }\n}\nconst Wave = () => {\n      return(\n        <svg height=\"100%\" width=\"100%\" id=\"bg-svg\" viewBox=\"0 0 1440 500\" xmlns=\"http://www.w3.org/2000/svg\" \n        class=\"transition duration-300 ease-in-out delay-150\"><defs><linearGradient id=\"gradient\"><stop offset=\"5%\" \n        stop-color=\"#9b7bc488\"></stop><stop offset=\"95%\" stop-color=\"#374b8c88\"></stop></linearGradient></defs>\n        <path d=\"M 0,500 C 0,500 0,166 0,166 C 108.42105263157893,194.86124401913878 216.84210526315786,223.72248803827753 319,\n        207 C 421.15789473684214,190.27751196172247 517.0526315789474,127.97129186602871 618,112 C 718.9473684210526,\n        96.02870813397129 824.9473684210525,126.39234449760764 900,154 C 975.0526315789475,181.60765550239236 1019.1578947368423,\n        206.45933014354068 1104,208 C 1188.8421052631577,209.54066985645932 1314.4210526315787,187.77033492822966 1440,166 C 1440,\n        166 1440,500 1440,500 Z\" stroke=\"none\" stroke-width=\"0\" fill=\"url(#gradient)\" class=\"transition-all duration-300 ease-in-out \n        delay-150\"></path><defs><linearGradient id=\"gradient\"><stop offset=\"5%\" stop-color=\"#9b7bc4ff\"></stop><stop offset=\"95%\" \n        stop-color=\"#374b8cff\"></stop></linearGradient></defs><path d=\"M 0,500 C 0,500 0,333 0,333 C 88.99521531100481,\n        306.18660287081343 177.99043062200963,279.3732057416268 268,288 C 358.0095693779904,296.6267942583732 449.0334928229664,\n        340.69377990430627 547,335 C 644.9665071770336,329.30622009569373 749.8755980861246,273.85167464114835 865,271 C 980.1244019138754,\n        268.14832535885165 1105.4641148325359,317.8995215311005 1203,337 C 1300.5358851674641,356.1004784688995 1370.267942583732,\n        344.55023923444975 1440,333 C 1440,333 1440,500 1440,500 Z\" stroke=\"none\" stroke-width=\"0\" fill=\"url(#gradient)\" \n        class=\"transition-all duration-300 ease-in-out delay-150\"></path></svg>\n      )\n    }\n\nexport default Gameplay;\n","/Users/meganyee/Documents/GitHub/Blockchain_Lottery/src/Client(React)/components/Gameplay/lottery.js",[],"/Users/meganyee/Documents/GitHub/Blockchain_Lottery/src/Client(React)/components/Gameplay/web3.js",[],{"ruleId":"74","severity":1,"message":"75","line":1,"column":17,"nodeType":"76","messageId":"77","endLine":1,"endColumn":26},{"ruleId":"78","replacedBy":"79"},{"ruleId":"80","replacedBy":"81"},{"ruleId":"74","severity":1,"message":"82","line":3,"column":12,"nodeType":"76","messageId":"77","endLine":3,"endColumn":16},{"ruleId":"83","severity":1,"message":"84","line":26,"column":35,"nodeType":"85","messageId":"86","endLine":26,"endColumn":46,"fix":"87"},{"ruleId":"74","severity":1,"message":"88","line":25,"column":9,"nodeType":"76","messageId":"77","endLine":25,"endColumn":20},{"ruleId":"74","severity":1,"message":"89","line":3,"column":9,"nodeType":"76","messageId":"77","endLine":3,"endColumn":14},{"ruleId":"74","severity":1,"message":"90","line":3,"column":16,"nodeType":"76","messageId":"77","endLine":3,"endColumn":27},{"ruleId":"74","severity":1,"message":"91","line":15,"column":22,"nodeType":"76","messageId":"77","endLine":15,"endColumn":33},{"ruleId":"74","severity":1,"message":"92","line":24,"column":9,"nodeType":"76","messageId":"77","endLine":24,"endColumn":22},{"ruleId":"93","severity":1,"message":"94","line":24,"column":69,"nodeType":"95","endLine":24,"endColumn":71,"suggestions":"96"},{"ruleId":"74","severity":1,"message":"97","line":39,"column":9,"nodeType":"76","messageId":"77","endLine":39,"endColumn":16},{"ruleId":"74","severity":1,"message":"75","line":1,"column":17,"nodeType":"76","messageId":"77","endLine":1,"endColumn":26},{"ruleId":"74","severity":1,"message":"98","line":2,"column":9,"nodeType":"76","messageId":"77","endLine":2,"endColumn":17},{"ruleId":"99","severity":1,"message":"100","line":127,"column":9,"nodeType":"101","endLine":127,"endColumn":61},{"ruleId":"99","severity":1,"message":"100","line":134,"column":11,"nodeType":"101","endLine":134,"endColumn":73},{"ruleId":"99","severity":1,"message":"100","line":144,"column":11,"nodeType":"101","endLine":144,"endColumn":65},{"ruleId":"102","severity":1,"message":"103","line":180,"column":74,"nodeType":"104","messageId":"105","endLine":180,"endColumn":76},"no-unused-vars","'Component' is defined but never used.","Identifier","unusedVar","no-native-reassign",["106"],"no-negated-in-lhs",["107"],"'Link' is defined but never used.","no-whitespace-before-property","Unexpected whitespace before property cName.","MemberExpression","unexpectedWhitespace",{"range":"108","text":"109"},"'requestAuth' is assigned a value but never used.","'Route' is defined but never used.","'withRouuter' is defined but never used.","'networkName' is assigned a value but never used.","'requestAccess' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useCallback has a missing dependency: 'web3Context'. Either include it or remove the dependency array.","ArrayExpression",["110"],"'message' is assigned a value but never used.","'useState' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation",[899,901],".",{"desc":"111","fix":"112"},"Update the dependencies array to be: [web3Context]",{"range":"113","text":"114"},[742,744],"[web3Context]"]